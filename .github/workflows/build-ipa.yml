name: Build IPA

on:
  workflow_dispatch:
    

env:
  TYPE_RELEASE: alpha
  PROJECT_PATH: AppAmbitTestingApp/AppAmbitTestingApp.csproj
  IPA_NAME: com_appambit_testapp

  
jobs:
  maui-ios:
    runs-on: macos-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install MAUI Workload
        run: dotnet workload install maui ios

      - name: Reset Keychain Environment
        run: |
          security delete-keychain build.keychain || true
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings -t 3600 -l build.keychain

      - name: Decode and install P12 certificate
        env:
          P12_CERTIFICATE_BASE64: ${{ secrets.IOS_P12_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.IOS_APPLE_P12_PASSWORD }}
        run: |
          echo "$P12_CERTIFICATE_BASE64" | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -A
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

      - name: Decode and install Provisioning Profile
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        run: |
          echo "$PROVISIONING_PROFILE_BASE64" | base64 --decode > profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          UUID=$(security cms -D -i profile.mobileprovision | plutil -extract UUID xml1 -o - - | xmllint --xpath "string(//string)" -)
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision
          echo "UUID=$UUID" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore ${{env.PROJECT_PATH}}

      - name: Build IPA
        run: |
          dotnet publish ${{env.PROJECT_PATH}} \
            -c Release -f net8.0-ios \
            -p:ArchiveOnBuild=true \
            -p:CodesignProvision=${{ env.UUID }} \
            -o ./publish-ios

      - name: Rename the launch type
        run: |
          ORIGINAL_PATH=$(find ./publish-ios -name "*.ipa" | head -n 1)
          echo "IPA found: $ORIGINAL_PATH"
          DIR=$(dirname "$ORIGINAL_PATH")
          NEW_NAME="${{env.IPA_NAME}}_${TYPE_RELEASE}.ipa"
          echo "Renaming to: $NEW_NAME"
          mv "$ORIGINAL_PATH" "$DIR/$NEW_NAME"            

      - name: Upload iOS Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: ./publish-ios/**/*.ipa
